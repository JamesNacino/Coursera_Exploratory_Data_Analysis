df <- data.frame(readdata)
df_sub<- df[, c(2,7,11, 17,23)] ##Shrink data frame to respective columns, locations represented by a number
colnames(df_sub)<- c("Hospital", "State", "HA", "HF", "Pn") ##Rename the column names
df_sub <- df_sub[order(df_sub$State,df_sub$HA),] ##Select the specific state from the State column
df_sub
}
rankall
rankall()
rankall <- function(outcome, num){
readdata <- read.csv("outcome-of-care-measures.csv", header = T, colClasses="character", na.strings=c("Not Available", "NA"))
df <- data.frame(readdata)
df_sub<- df[, c(2,7,11, 17,23)] ##Shrink data frame to respective columns, locations represented by a number
colnames(df_sub)<- c("Hospital", "State", "HA", "HF", "Pn") ##Rename the column names
df_sub <- df_sub[order(df_sub$State,df_sub$HA==outcome),] ##Select the specific state from the State column
df_sub
}
ranall("HA")
rankall("HA")
rankall <- function(outcome, num){
readdata <- read.csv("outcome-of-care-measures.csv", header = T, colClasses="character", na.strings=c("Not Available", "NA"))
df <- data.frame(readdata)
df_sub<- df[, c(2,7,11, 17,23)] ##Shrink data frame to respective columns, locations represented by a number
colnames(df_sub)<- c("Hospital", "State", "HA", "HF", "Pn") ##Rename the column names
df_sub <- df_sub[order(df_sub$State,df_sub$HA),] ##Select the specific state from the State column
df_sub
}
rankall()
rankall <- function(outcome, num){
readdata <- read.csv("outcome-of-care-measures.csv", header = T, colClasses="character", na.strings=c("Not Available", "NA"))
df <- data.frame(readdata)
df_sub<- df[, c(2,7,11, 17,23)] ##Shrink data frame to respective columns, locations represented by a number
colnames(df_sub)<- c("Hospital", "State", "HA", "HF", "Pn") ##Rename the column names
df_sub <- df_sub[order(df_sub$State,df_sub$HA),] ##Select the specific state from the State column
list_states <- unique(as.character(df$State)) ##Gather all the states and store them into a variable
count_states <- length(list_states)  ##Count the length of the list of states and store into a variable
for(i in 1:count_states){  ##loop as many times equal to the length of the list of the states
x[i] <- list_states[i]
}
data.frame(x, stringsAsFactors=FALSE)
}
rankall()
with(df,tapply(Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, State, mean))
na.omit(df)
with(df,tapply(Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, State, mean))
readdata <- read.csv("outcome-of-care-measures.csv", header = T, colClasses="character", na.strings=c("Not Available", "NA"))
df <- data.frame(readdata)
View(df)
View(df)
View(df)
with(df,tapply(Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, State, mean))
df <- na.omit(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
df <- na.omit(outcome)
View(df)
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
install.packages(xlsx)
install.packages("http://cran.r-project.org/src/contrib/xlsx_0.5.7.tar.gz")
install.packages("xlsx")
read.xlsx()
require("xlsx")
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7')
require("xlsx")
Sys.setenv(JAVA_Home='C:\Program Files (x86)\Java\jre1.8.0_45')
Sys.setenv(JAVA_HOME='C:\Program Files (x86)\Java\jre1.8.0_45')
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_45')
require(xlsx)
install.packages("xlsx")
require("xlsx")
install.packages("swirl")
library(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
install.packages("http://cran.r-project.org/src/contrib/RMySQL_0.10.3.tar.gz")
install.packages("RMySQL")
ucscDb <- dbConnnect(MySQL(), user="genome", host="genome.mysql.cse.ucsc.edu")
library(RMySQL)
ucscDb <- dbConnnect(MySQL(), user="genome", host="genome.mysql.cse.ucsc.edu")
ucscDb <- dbConnnect(MySQL(), user="genome", host="genome.mysql.cse.ucsc.edu")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome.mysql.cse.ucsc.edu")
genome-mysql.cse.ucsc.edu
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDB,"show databases;"; dbDisconnect(ucuscDB);
result <- dbGetQuery(ucscDB,"show databases;"; dbDisconnect(ucscDB);
result
result <- dbGetQuery(ucscDB,"show databases;"); dbDisconnect(ucscDB);
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
result
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
allTables
alltables[[1:5]]
alTables[[1:5]]
allTables[[1:5]]
allTables[1:5]
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches beween 1 and 3")
alltables[1:4]
hg19 <- dbConnect(MySQL(), user=”genome”, db=”hg19”, host=”genome-mysql.cse.ucsc.edu”)
hg19 <- dbConnect(MySQL(), user=”genome”, db="hg19", host="genome-mysql.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches beween 1 and 3")
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches beween 1 and 3")
query <- dbSendQuery(hg19, "select * from affyU133Plus2")
warnings()
fetch(query)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 & 3")
dbCleaResult(query)
dbClearResult(query)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 & 3")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 & 3")
ucscDb
query
query1 <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 & 3")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
query1 <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 & 3")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
query2 <- dbSendQuery(hg19, "select * from affyU133Plus2")
dbConnect(ucuscDb)
dbConnect(ucscDb)
query2 <- dbSendQuery(hg19, "select * from affyU133Plus2")
dbDisconnect(ucscdb)
dbDisconnect(ucscDb)
ucscDb
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
query2 <- dbSendQuery(hg19, "select * from affyU133Plus2")
clean <- ElecPowerCon[ElecPowerCon$Date=="1/2/2007" | ElecPowerCon$Date=="2/2/2007",]
ElecPowerCon <- read.csv("household_power_consumption.txt", sep=";")
setwd("C:/Users/james/SkyDrive/Data Science/DataScience_Coursera/Exploratory_Data_Analysis/Project_1")
ElecPowerCon <- read.csv("household_power_consumption.txt", sep=";")
clean <- ElecPowerCon[ElecPowerCon$Date=="1/2/2007" | ElecPowerCon$Date=="2/2/2007",]
clean
head(clean)
strptime(clean[clean$date], %d/%b/%Y)
strptime(clean$date, %d/%b/%Y)
strptime(clean$date, "%d/%b/%Y")
strptime(clean[clean$date], "%d/%b/%Y")
clean$date[1]
strptime(clean[clean$Date], "%d/%b/%Y")
strptime(clean[clean$Date,], "%d/%b/%Y")
strptime(clean$Date, "%d/%b/%Y")
strptime(as.character(clean$Date), "%d/%b/%Y")
clean
head(clean)
strptime(as.character(clean$Date), "%d/%b/%Y")
?strptime
strptime(as.character(clean$Date), "%d %b %Y")
strptime(as.character(clean$Date), )
strptime(as.character(clean$Date), format="%Y-%m-%d")
clean$Date <- as.Date(clean$Date)
strptime(as.character(clean$Date), "%d/%b/%Y")
sapply(clean, class)
strptime(clean$Date, format="%d/%b/%Y")
strptime(clean$Date, format="%d:%b:%Y")
strptime(as.character(clean$Date), format="%d/%b%Y")
strptime(as.character(clean$Date), format="%d/%b/%Y")
strptime(ElecPowerCon$Date, format="%d/%b/%Y")
strptime(ElecPowerCon$Date, format="%d/%m/%Y")
clean <- strptime(clean[clean$Date,], format="%d/%m/%Y")
clean
clean <- ElecPowerCon[ElecPowerCon$Date=="1/2/2007" | ElecPowerCon$Date=="2/2/2007",]
clean
head(clean'')
head(clean)
clean$Date <- strptime(clean$Date, format="%d/%m/%Y")
head(clean)
?par
?datasets
library(help = "datasets")
?gl
x <- rnorm(100)
y <- rnorm(100)
plot(x,y)
?count
table(clean$Global_active_power)
p1 <- data.frame(table(clean$Global_active_power))
p1
head(p1)
?dec
sort(p1$Freq)
sort(p1[p1$Freq])
sort(p1[p1$Freq,])
sort(p1[p1$Freq],)
pq
p1
head(p1)
x <- p1$Var1
y <- p1$Freq
hist(p1$Var1, col="red", breaks=15)
as.numeric(as.character(p1$Var1))
?type
type(p1$Var1)
typeof(p1$Var1)
hist(p1$Var1, col="red", breaks=15)
as.numeric(as.character(p1$Var1))
p1$Var1 <- as.numeric(as.character(p1$Var1))
typeof(p1$Var1)
hist(p1$Var1, col="red", breaks=15)
hist(p1$Var1, col="red", breaks=15, main = "Global Active Power")
?hist
clean
head(clean)
hist(p1$Var1, col="red", breaks=15, main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
clean$Global_active_power <- as.numeric(as.character(clean$Global_active_power))
hist(clean$Global_active_power, col="red", breaks=20, main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
with(clean, plot(Global_active_power, Date))
with(clean, plot(Date, Global_active_power))
with(clean, plot(Date, Time))
with(clean, plot(Global_reactive_power, Global_active_power))
with(clean, plot(DAte, Global_active_power))
with(clean, plot(Date, Global_active_power))
with(clean, plot(Date, Global_active_power))
?plot
axis(1, at=1:2, lab=c("Mon","Tue","Wed","Thu","Fri"))
axis(1, at=1:2, lab=c("Thurs","Fri","Sat"))
axis(1, at=1:2, lab=c("Thurs","Fri"))
?plot
clean2 <- cbind(clean, "Date&Time" = paste(clean$Date, clean$Time))
clean2
head(clean2)
with(clean2, plot(Date$Time, Global_active_power))
with(clean2, plot(Date&Time, Global_active_power))
clean2 <- cbind(clean, "Date_Time" = paste(clean$Date, clean$Time))
clean2
head(clean2)
with(clean2, plot(Date_Time, Global_active_power))
with(clean2, plot(Date_Time, Global_active_power), labels=c("Thu","Fri"))
with(clean2, plot(Date_Time, Global_active_power), lab=c("Thu","Fri"))
?axis
axis(1, labels=c("Thu, Fri"))
axis(1, at=1:2, labels=c("Thu, Fri"))
axis(1, at=1:2, labels=("Thu, Fri"))
axis(1, at=1:2, labels=c("Thu", "Fri"))
with(clean2, plot(Date_Time, Global_active_power))
axis(1, at=1:2, labels=c("Thu", "Fri"))
plot(Date_Time, Global_active_power)
?plot
plot(clean2$Date_Time, clean2$Global_active_power, ylab="Global Active Power (kilowatts)")
axis(1, at=1:5, lab=c("Mon","Tue","Wed","Thu","Fri"))
typeof(clean2$Date_Time)
head(clean2)
?strptime
clean2$Date_Time <- strptime(clean2$Date_Time, format="%Y-%m-%d %T)
clean2$Date_Time <- strptime(clean2$Date_Time, format="%Y-%m-%d %T")
typeof(clean2$Date_Time)
?strptime
head(clean2$Date_Time)
plot(clean2$Date_Time, clean2$Global_active_power, ylab="Global Active Power (kilowatts)")
with(clean2, plot(Date_Time, Global_active_power, ylab="Global Active Power (kilowatts)", xlab=""))
lines(spline(clean2$Date_Time, clean2$Global_active_power), col = 4)
lines(clean2$Date_Time, clean2$Global_active_power)
with(clean2, plot(Date_Time, Global_active_power, ylab="Global Active Power (kilowatts)", xlab=""))
lines(clean2$Date_Time, clean2$Global_active_power)
?pch
with(clean2, plot(Date_Time, Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Global_active_power)
?legend
with(clean2, plot(Date_Time, c(Sub_metering_1, Sub_metering_2, Sub_metering_3), ylab="Energy Sub Metering", xlab="", pch=20))
with(clean2, plot(Date_Time, y =(Sub_metering_1, Sub_metering_2, Sub_metering_3), ylab="Energy Sub Metering", xlab="", pch=20))
with(clean2, plot(Date_Time, y =c(Sub_metering_1, Sub_metering_2, Sub_metering_3), ylab="Energy Sub Metering", xlab="", pch=20))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
with(clean2, plot(Date_Time, lines(Sub_metering_1), ylab="Energy Sub Metering", xlab="", pch=20))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
?lines
lines(Date_Time, Sub_metering_1, col="Blue")
lines(clean2$Date_Time, clean2$Sub_metering_1, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
?legend
legend("topright")
legend("topright", legend)
legedn("topright", legend="Sub_metering_1")
legend("topright", legend="Sub_metering_1")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3", col=c("black","blue","red"))
)
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3", col=c(2,3,4)))
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"))
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c(2,3,4))
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
par(mar=c(4,4,2,1))
par(mar=c(2,2,2,2))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
par(mar=c(3,2,3,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
par(mar=c(3,2,3,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
par(mar=c(2,2,3,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
par(mar=c(3,3,3,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
par(mar=c(3,5,3,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
?cex
par(mar=c(3,2,3,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
?legend
par(mar=c(3,3,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
par(mfrow=c(2,2))
hist(clean2$Global_active_power, col="red", breaks=20, main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
with(clean2, plot(Date_Time, Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Global_active_power)
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
par(mfrow=c(2,2), mar=(2,2,2,2))
par(mfrow=c(2,2), mar=c(2,2,2,2))
clean2$Global_active_power <- as.numeric(as.character(clean2$Global_active_power))
hist(clean2$Global_active_power, col="red", breaks=20, main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
##Construct the second graph (scatterplot)
with(clean2, plot(Date_Time, Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Global_active_power)
##Construct the third graph (scatterplot)
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
par(mfrow=c(2,2), mar=c(2,3,1,2))
clean2$Global_active_power <- as.numeric(as.character(clean2$Global_active_power))
hist(clean2$Global_active_power, col="red", breaks=20, main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
##Construct the second graph (scatterplot)
with(clean2, plot(Date_Time, Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Global_active_power)
##Construct the third graph (scatterplot)
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
##Construct the last four graphs
par(mfrow=c(2,2), mar=c(2,2,2,2))
par(mfrow=c(2,2), mar=c(2,4,4,2))
clean2$Global_active_power <- as.numeric(as.character(clean2$Global_active_power))
hist(clean2$Global_active_power, col="red", breaks=20, main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
##Construct the second graph (scatterplot)
with(clean2, plot(Date_Time, Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Global_active_power)
##Construct the third graph (scatterplot)
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1)
##Construct the last four graphs
par(mfrow=c(2,2), mar=c(2,4,2,2))
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1, cex=1.0)
par(mfrow=c(1,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1, cex=1.0)
par(mfrow=c(2,2), mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1, cex=1.0)
?legend
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1, cex=0.2)
par(mfrow=c(1,1))
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1, cex=0.2)
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1, cex=0.5)
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1, cex=0.6)
head(clean2)
with(clean2, plot(Date_Time, Voltage, ylab="Voltage", xlab="date_time", pch=20))
lines(clean2$Date_Time, clean2$Voltage)
?pch
with(clean2, plot(Date_Time, Voltage, ylab="Voltage", xlab="date_time", pch=20, cex=.5))
with(clean2, plot(Date_Time, Voltage, ylab="Voltage", xlab="date_time", pch=20, cex=.1))
with(clean2, plot(Date_Time, Voltage, ylab="Voltage", xlab="date_time", pch=20, cex=0.2))
with(clean2, plot(Date_Time, Voltage, ylab="Voltage", xlab="date_time", pch=20, cex=0.2))
lines(clean2$Date_Time, clean2$Voltage)
par(mar=c(3,4,3,3))
with(clean2, plot(Date_Time, Voltage, ylab="Voltage", xlab="date_time", pch=20, cex=0.2))
lines(clean2$Date_Time, clean2$Voltage)
par(mar=c(4,4,3,3))
with(clean2, plot(Date_Time, Voltage, ylab="Voltage", xlab="date_time", pch=20, cex=0.2))
lines(clean2$Date_Time, clean2$Voltage)
par(mar=c(4,4,2,2))
with(clean2, plot(Date_Time, Voltage, ylab="Voltage", xlab="date_time", pch=20, cex=0.2))
lines(clean2$Date_Time, clean2$Voltage)
par(mar=c(4,4,2,2))
with(clean2, plot(Date_Time, Global_reactive_power, ylab="Voltage", xlab="date_time", pch=20, cex=0.2))
lines(clean2$Date_Time, clean2$Global_reactive_power)
par(mfrow=c(2,2), mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Global_active_power)
par(mar=c(4,4,2,2))
with(clean2, plot(Date_Time, Voltage, ylab="Voltage", xlab="date_time", pch=20, cex=0.2))
lines(clean2$Date_Time, clean2$Voltage)
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1, cex=0.6)
par(mar=c(4,4,2,2))
with(clean2, plot(Date_Time, Global_reactive_power, ylab="Voltage", xlab="date_time", pch=20, cex=0.2))
lines(clean2$Date_Time, clean2$Global_reactive_power)
##Construct the fourth plot
par(mfrow=c(2,2), mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Global_active_power)
par(mar=c(4,4,2,2))
with(clean2, plot(Date_Time, Voltage, ylab="Voltage", xlab="date_time", pch=20, cex=0.2))
lines(clean2$Date_Time, clean2$Voltage)
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1, cex=0.6)
par(mar=c(4,4,2,2))
with(clean2, plot(Date_Time, Global_reactive_power, ylab="Voltage", xlab="date_time", pch=20, cex=0.2))
lines(clean2$Date_Time, clean2$Global_reactive_power)
#Save as '.png' file
dev.copy(png, file="plot_4.png")
dev.off()
par(mfrow=c(1,1))
##Construct the first plot (histogram)
clean2$Global_active_power <- as.numeric(as.character(clean2$Global_active_power))
hist(clean2$Global_active_power, col="red", breaks=20, main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
#Save as '.png' file
dev.copy(png, file="plot_1.png")
dev.off()
##Construct the second plot (scatterplot)
with(clean2, plot(Date_Time, Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Global_active_power)
#Save as '.png' file
dev.copy(png, file="plot_2.png")
dev.off()
##Construct the third plot (scatterplot)
par(mar=c(3,4,2,1))
with(clean2, plot(Date_Time, Sub_metering_1, ylab="Energy Sub Metering", xlab="", pch=20))
lines(clean2$Date_Time, clean2$Sub_metering_1)
lines(clean2$Date_Time, clean2$Sub_metering_2, col="blue")
lines(clean2$Date_Time, clean2$Sub_metering_3, col="red")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","blue","red"), lwd=1, cex=0.6)
#Save as '.png' file
dev.copy(png, file="plot_3.png")
dev.off()
